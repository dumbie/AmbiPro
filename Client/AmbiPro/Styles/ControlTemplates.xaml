<ResourceDictionary
    x:Class="AmbiPro.Styles.ControlTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--ListBox Templates-->
    <ControlTemplate x:Key="ListBoxVerticalTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxHorizontalTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerHorizontal}" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxWrapPanelTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="ListBoxUniformGridTemplate" TargetType="ListBox">
        <ScrollViewer Style="{DynamicResource ScrollViewerVertical}">
            <UniformGrid IsItemsHost="True"/>
        </ScrollViewer>
    </ControlTemplate>

    <!--Button Templates-->
    <ControlTemplate x:Key="ButtonTemplateWhite" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F1F1F1"/>
                <Setter Property="Background" TargetName="border" Value="#30F1F1F1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F1F1F1"/>
                <Setter Property="Background" TargetName="border" Value="#60F1F1F1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.50"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ButtonTemplateBlack" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#1D1D1D"/>
                <Setter Property="Background" TargetName="border" Value="#301D1D1D"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#1D1D1D"/>
                <Setter Property="Background" TargetName="border" Value="#601D1D1D"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.50"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ButtonTemplateTransparent" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
    </ControlTemplate>

    <!--ListBoxItem Templates-->
    <ControlTemplate x:Key="ListBoxItemTemplateWhite" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F1F1F1"/>
                <Setter Property="Background" TargetName="border" Value="#30F1F1F1"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#00C7FF"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#00C7FF"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ListBoxItemTemplateBlack" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.50"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#1D1D1D"/>
                <Setter Property="Background" TargetName="border" Value="#301D1D1D"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#00C7FF"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#00C7FF"/>
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--CheckBox Templates-->
    <ControlTemplate x:Key="CheckBoxTemplateAccent" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid x:Name="markGrid">
                    <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#00C7FF" Margin="2" Opacity="0" Stretch="None"/>
                </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#00C7FF"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="#00C7FF"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#00C7FF"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Slider Templates-->
    <ControlTemplate x:Key="SliderTemplateAccent" TargetType="{x:Type Slider}">
        <Track x:Name="PART_Track">
            <Track.DecreaseRepeatButton>
                <RepeatButton Command="Slider.DecreaseLarge">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="Background" Value="#777"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                </RepeatButton>
            </Track.DecreaseRepeatButton>
            <Track.IncreaseRepeatButton>
                <RepeatButton Command="Slider.IncreaseLarge">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="Background" Value="#777"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                </RepeatButton>
            </Track.IncreaseRepeatButton>
            <Track.Thumb>
                <Thumb x:Name="Thumb" IsTabStop="False" Focusable="False" Height="{TemplateBinding Height}" Width="10">
                    <Thumb.Template>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Path x:Name="grip" Data="M0,0C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0z" Fill="#00C7FF" Stretch="Fill"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="grip" Value="#00A9FF"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter Property="Fill" TargetName="grip" Value="#00A9FF"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="grip" Value="#00A9FF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </Track.Thumb>
        </Track>
    </ControlTemplate>
</ResourceDictionary>